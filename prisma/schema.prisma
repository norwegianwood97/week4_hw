// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 카테고리 테이블
model Categories {
  categoryId Int @id @default(autoincrement()) @map("categoryId")
  name String @map("name")
  order Int @map("order")
  menus Menus[]

  @@map("Categories")
}
// 메뉴 테이블
model Menus{
  menuId Int @id @default(autoincrement()) @map("menuId")
  name String @map("name")
  description String @db.Text @map("description")
  image String @map("image")
  price Int @map("price")
  order Int @map("order")
  status Status @default(FOR_SALE) @map("status")
  categoryId Int @map("categoryId")
  
  category Categories @relation(fields:[categoryId], references:[categoryId], onDelete: Cascade)

  @@map("Menus")
}
// Menu 테이블의 status 열을 매핑하기 위한 Enum 정의
enum Status{
  FOR_SALE
  SOLD_OUT
}

model Users {
  userId Int @id @default(autoincrement()) @map("user")
  nickname String @map("nickname")
  password String @map("password")
  usertype Usertype @default(CUSTOMER) @map("usertype")
}

enum Usertype{
  CUSTOMER
  OWNER
}